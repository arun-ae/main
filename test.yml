- name: Example Playbook
  hosts: all
  
  tasks:
    - name: Pip Creating Requirements file
      win_copy:
        src: files/piprequirements.txt
        dest: C:\piprequirements.txt
        mode: '0700' 



    # - name: Get pip version
    #   win_shell: pip --version | Select-String -Pattern '\d+\.\d+\.\d+' -AllMatches | ForEach-Object { $_.Matches.Value }
    #   register: pip_version
    # - name: Display upgrade status
    #   debug:
    #     var: pip_version  

    # - name: Pip Upgrade if necessary
    #   win_shell: |
    #     if (Get-Command python) {
    #       $pipVersion = "pip --version | Select-String -Pattern '\d+\.\d+\.\d+' -AllMatches | ForEach-Object { $_.Matches.Value }"
    #       if ($pipVersion -ne '20.2.1') {
    #         python -m pip --disable-pip-version-check install --upgrade pip=='20.2.1'
    #       }
    #     }
    #   register: pip_output

    # - name: Display upgrade status
    #   debug:
    #     var: pip_output


    #CHAT GPT


    - name: Pip Upgrade if necessary
      win_shell: |
        if (Get-Command python) {
          $pipVersion = "pip --version | Select-String -Pattern '\d+\.\d+\.\d+' -AllMatches | ForEach-Object { $_.Matches.Value }"
          if ($pipVersion -notmatch '20.2.1') {
            python -m pip --disable-pip-version-check install --upgrade pip=='20.2.1'
          }
        }
      register: pip_output
      
    - name: Display upgrade status
      debug:
        var: pip_output




    # - name: Check if Python is installed
    #   win_command: python --version
    #   register: python_check

      
    # - name: Display upgrade status
    #   debug:
    #     var: python_check
    #   # ignore_errors: true
      

    # - name: Upgrade pip
    #   win_shell: |
    #     python -m pip --disable-pip-version-check install --upgrade pip=='20.2.1'
    #   when: python_check.rc == 0  # Only run if Python is installed

    # - name: Verify pip version
    #   win_shell: |
    #     pip --version | findstr '20.2.1'
    #   register: pip_version_check
    #   failed_when: pip_version_check.rc != 0
    #   changed_when: false
    #   when: python_check.rc == 0  # Only run if Python is installed


    # # - name: Display pip version
    # #   debug:
    # #     var: pip_upgrade

    # # - name: Upgrade pip
    # #   win_shell: |
    # #     if (Get-Command python) {
    # #       python -m pip --disable-pip-version-check install --upgrade pip=='20.2.1'
    # #     }


    # # - name: Install pip packages
    # #   win_shell: |
    # #     if(Get-Command pip) {
    # #       # pip --disable-pip-version-check install -r 'C:/piprequirements.txt'
    # #       python -m pip install --disable-pip-version-check -r 'C:\piprequirements.txt'

    # #     }

